name: "Oracle: Licence Audit"
run-name: "Oracle-Licence-Audit"
on:
  workflow_dispatch:
    inputs:
      SourceCodeVersion:
        description: "Source version for the hmpps-delius-operation-automation. Enter a pull request, branch, commit ID, tag, or reference."
        type: string
        default: "main"
      SourceConfigVersion:
        description: "Source version for the modernisation-platform-configuration-management. Enter a pull request, branch, commit ID, tag, or reference."
        type: string
        default: "main"

env:
  ansible_config: operations/playbooks/ansible.cfg
  command: ansible-playbook operations/playbooks/oracle_licence_audit/audit.yml
  inventory: inventory/ansible

# Allow permissions on repository and docker image and OIDC token
permissions:
  contents: read
  packages: read
  id-token: write

jobs:
  deployment:
    name: oracle-licence-audit
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ministryofjustice/hmpps-delius-operational-automation:0.1
    strategy:
      matrix:
        environment: [delius-core-dev]
    #,delius-core-test,delius-core-training,delius-core-stage,delius-core-pre-prod,delius-core-prod]
    environment: ${{ matrix.environment }}
    timeout-minutes: 1440
    continue-on-error: false

    steps:

      - name: Checkout Inventory From modernisation-platform-configuration-management
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            ansible/hosts
            ansible/group_vars
          path: inventory
          ref: ${{ github.event.inputs.SourceConfigVersion }}
          fetch-depth: 0

      - name: Checkout From hmpps-delius-operational-automation
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/hmpps-delius-operational-automation
          sparse-checkout-cone-mode: false
          sparse-checkout: |
              playbooks/oracle_licence_audit
              playbooks/ansible.cfg
          path: operations
          ref: ${{ github.event.inputs.SourceCodeVersion }}
          fetch-depth: 0

      - name: Install yq
        uses: dcarbone/install-yq-action@v1.1.1
        with:
          download-compressed: true
          version: "v4.35.1"
          force: true

      - name: Get Database Targets For Environment
        id: databasetargets
        working-directory: ${{ env.inventory }}
        run: |
          targets=""
          environment="environment_name_$(echo ${{ matrix.environment }} | sed 's/delius-core-dev/delius_core_development_dev/;s/delius-core-test/delius_core_test_test/;s/delius-core-training/delius_core_test_training/;s/delius-core-stage/delius_core_preproduction_stage/;s/delius-core-pre-prod/delius_core_preproduction_pre_prod/;s/delius-core-prod/delius_core_production_prod/')"
          build_targets() {
            databasetype=${1}
            if [[ -e group_vars/${environment}_${databasetype}_primarydb.yml ]]
            then
              high_availability_count=$(yq .high_availability_count.${databasetype} group_vars/${environment}_all.yml)
              [ $high_availability_count -le 2 ] && targets="${targets}${environment}_${databasetype}_primarydb,"
              [ $high_availability_count -eq 1 ] && targets="${targets}${environment}_${databasetype}_standbydb1,"
              [ $high_availability_count -eq 2 ] && targets="${targets}${environment}_${databasetype}_standbydb1,${environment}_${databasetype}_standbydb2,"
              echo
            fi
          }
          build_targets delius
          build_targets mis
          build_targets misboe
          build_targets misdsd
          echo "targets=$targets" >> $GITHUB_OUTPUT
          echo "allHost=group_vars/${environment}_all" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        id: login-aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/modernisation-platform-oidc-cicd"
          role-session-name: "hmpps-delius-operational-automation-${{ github.run_number }}"
          aws-region: "eu-west-2"
          output-credentials: true

      - name: Start Ansible Oracle Licence Audit
        run: |
          export ANSIBLE_CONFIG=$ansible_config
          $command \
          -e targets=${{ steps.databasetargets.outputs.targets }}
          -e environment_name=${{ matrix.environment }} \
          -e @$inventory/${{ steps.databasetargets.outputs.allHost }}.yml
          -e audit=yes

      - name: Start Ansible Oracle Licence Audit Upload When Last Environment Processed
        if: ${{ strategy.job-index == 0 }}
        run: |
          export ANSIBLE_CONFIG=$ansible_config
          $command -e upload=yes