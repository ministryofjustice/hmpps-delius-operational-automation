name: "Oracle: Licence Audit"
run-name: "Oracle-Licence-Audit"
on:
  workflow_dispatch:
    inputs:
      SourceCodeVersion:
        description: "Source version for the hmpps-delius-operation-automation. Enter a pull request, branch, commit ID, tag, or reference."
        type: string
        default: "main"
      SourceConfigVersion:
        description: "Source version for the modernisation-platform-configuration-management. Enter a pull request, branch, commit ID, tag, or reference."
        type: string
        default: "main"

env:
  ansible_config: ansible/playbooks/ansible.cfg
  command: ansible-playbook operations/ansible/site.yml -e force_role=oracle-db-licence-audit
  inventory: inventory/ansible

# Allow permissions on repository and docker image and OIDC token
permissions:
  contents: read
  packages: read
  id-token: write

jobs:
  deployment:
    name: oracle-licence-audit
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ministryofjustice/hmpps-delius-operational-automation:0.80.0
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        environment: [delius-core-dev,delius-mis-dev,delius-core-test,delius-core-stage,delius-mis-stage]
    environment: ${{ matrix.environment }}-preapproved
    timeout-minutes: 1440
    continue-on-error: true

    steps:
      - name: Checkout From hmpps-delius-operational-automation
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/hmpps-delius-operational-automation
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            playbooks/ansible.cfg
          path: ansible
          ref: ${{ github.event.inputs.SourceCodeVersion }}
          fetch-depth: 0

      - name: Checkout Inventory From modernisation-platform-configuration-management
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            ansible/hosts
            ansible/group_vars
          path: inventory
          ref: ${{ github.event.inputs.SourceConfigVersion }}
          fetch-depth: 0

      - name: Checkout Ansible Required Roles From modernisation-platform-configuration-management
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            ansible/roles/oracle-licence-audit
            ansible/roles/get-ec2-facts
            ansible/roles/get-modernisation-platform-facts
            ansible/roles/epel
            ansible/site.yml
          path: operations
          ref: ${{ github.event.inputs.SourceConfigVersion }}
          fetch-depth: 0

      - name: Get Database Targets For Environment
        id: databasetargets
        working-directory: ${{ env.inventory }}
        shell: bash
        run: |
          targets=""
          prefix="environment_name_$(echo ${{ matrix.environment }} | sed 's/dev/development_dev/;s/test/test_test/;s/training/test_training/;s/stage/preproduction_stage/;s/pre-prod/preproduction_pre_prod/;s/-prod/_production_prod/;s/-/_/g')"
          build_targets() {
            databasetype=${1}
            if [[ -e group_vars/${prefix}_${databasetype}_primarydb.yml ]]
            then
              targets="${targets}${prefix}_${databasetype}_dbs,"
            fi
          }
          build_targets delius
          build_targets mis
          build_targets boe
          build_targets dsd
          echo "targets=$targets" >> $GITHUB_OUTPUT
          if [[ $((${{ strategy.job-index }} + 1 )) -eq  ${{ strategy.job-total }} ]]
          then
            echo lastjob="true" >> $GITHUB_OUTPUT
          fi

      - name: Configure AWS Credentials
        id: login-aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/modernisation-platform-oidc-cicd"
          role-session-name: "hmpps-delius-operational-automation-${{ github.run_number }}"
          role-duration-seconds: 21600
          aws-region: "eu-west-2"
          output-credentials: true

      - name: Start Ansible Oracle Licence Audit
        run: |
          export ANSIBLE_CONFIG=$ansible_config
          $command -i $inventory -e ansible_aws_ssm_bucket_name=${{ vars.ANSIBLE_AWS_SSM_BUCKET_NAME }} \
          -e targets=${{ steps.databasetargets.outputs.targets }} \
          -e environment_name=${{ matrix.environment }} \
          --tags collection

      - name: Start Ansible Oracle Licence Audit Upload When Last Environment Processed
        if: ${{ steps.databasetargets.outputs.lastjob != '' }}
        run: |
          export ANSIBLE_CONFIG=$ansible_config
          $command -i $inventory -e ansible_aws_ssm_bucket_name=${{ vars.ANSIBLE_AWS_SSM_BUCKET_NAME }} \
          -e targets=${{ steps.databasetargets.outputs.targets }} \
          --tags summary