name: "Oracle: OEM & Agent Patching"
run-name: "Oracle: ${{ github.event.inputs.TargetOemEnvironment }}-oem-patching"
on:
  workflow_dispatch:
    inputs:
      PatchOEMHost:
        description: "Patch OEM Host (yes/no)"
        required: true
        type: choice
        default: "no"
        options:
          - "yes"
          - "no"
      TargetOemEnvironment:
        description: "Target OEM Environment"
        required: true
        type: choice
        options:
          - "hmpps-oem-development"
          - "hmpps-oem-test"
          - "hmpps-oem-preproduction"
          - "hmpps-oem-production"
      PatchAgents:
        description: "Patch Target Agents (yes/no)"
        required: true
        type: choice
        default: "no"
        options:
          - "yes"
          - "no"
      TargetEnvironment:
        description: "Target Agent environment"
        required: true
        type: choice
        default: "delius-core-dev"
        options:
          - "delius-core-dev"
          - "delius-core-test"
          - "delius-core-training"
          - "delius-core-stage"
          - "delius-core-preprod"
          - "delius-core-prod"
          - "delius-mis-dev"
          - "delius-mis-stage"
          - "delius-mis-preprod"
          - "delius-mis-prod"
      TargetHost:
        description: "Database target host"
        required: true
        type: choice
        default: "delius_primarydb"
        options:
          - "delius_primarydb"
          - "delius_standbydb1"
          - "delius_standbydb2"
          - "delius_dbs"
          - "mis_primarydb"
          - "mis_standbydb1"
          - "mis_dbs"
          - "boe_primarydb"
          - "boe_standbydb1"
          - "boe_dbs"
          - "dsd_primarydb"
          - "dsd_standbydb1"
          - "dsd_dbs"
      VerboseOutput:
        description: "Verbose Output level"
        type: choice
        default: "-v"
        options:
          - ""
          - "-v"
          - "-vv"
          - "-vvv"
          - "-vvvv"
      SourceCodeVersion:
        description: "Source version for the hmpps-delius-operation-automation. Enter a pull request, branch, commit ID, tag, or reference."
        type: string
        default: "main"
      SourceConfigVersion:
        description: "Source version for the modernisation-platform-configuration-management. Enter a pull request, branch, commit ID, tag, or reference."
        type: string
        default: "main"

env:
  ansible_config: ansible/playbooks/ansible.cfg

# Allow permissions on repository and docker image and OIDC token
permissions:
  contents: read
  packages: read
  id-token: write

jobs:
  build_target_names:
    runs-on: ubuntu-latest
    outputs:
      TargetOemEnvironment: ${{ steps.prepare.outputs.TargetOemEnvironment }}
      TargetOemHost: ${{ steps.prepare.outputs.TargetOemHost }}
      TargetEnvironment: ${{ steps.prepare.outputs.TargetEnvironment }}
      TargetHost: ${{ steps.prepare.outputs.TargetHost }}
    steps:
      - name: Prepare Target Name
        id: prepare
        run: |
          TargetOemEnvironment="${{ github.event.inputs.TargetOemEnvironment }}"
          TargetOemHost="environment_name_$(echo ${{ github.event.inputs.TargetOemEnvironment }}  | sed 's/-/_/g')"
          TargetEnvironment="${{ github.event.inputs.TargetEnvironment }}"
          TargetHost="environment_name_$(echo ${{ github.event.inputs.TargetEnvironment }} | sed 's/dev/development_dev/;s/test/test_test/;s/training/test_training/;s/stage/preproduction_stage/;s/pre-prod/preproduction_pre_prod/;s/-prod/_production_prod/;s/-/_/g')_${{ github.event.inputs.TargetHost }}"
          echo "TargetOemEnvironment=${TargetOemEnvironment}" >> $GITHUB_OUTPUT
          echo "TargetOemHost=${TargetOemHost}" >> $GITHUB_OUTPUT
          echo "TargetEnvironment=${TargetEnvironment}" >> $GITHUB_OUTPUT
          echo "TargetHost=${TargetHost}" >> $GITHUB_OUTPUT
      - name: Print Output Values (Verbose Mode)
        run: |
          echo "TargetOemEnvironment: ${{ steps.prepare.outputs.TargetOemEnvironment }}"
          echo "TargetOemHost: ${{ steps.prepare.outputs.TargetOemHost }}"
          echo "TargetEnvironment: ${{ steps.prepare.outputs.TargetEnvironment }}"
          echo "TargetHost: ${{ steps.prepare.outputs.TargetHost }}"
  
  get_oem_account_id:
    needs: build_target_names
    runs-on: ubuntu-latest
    environment: ${{ needs.build_target_names.outputs.TargetOemEnvironment }}-preapproved
    outputs:
       account_id: "${{ steps.output_account_id.outputs.account_id}}"
    steps:
      - name: output account id
        id: output_account_id
        run: echo "account_id=${{ vars.AWS_ACCOUNT_ID }}" >> $GITHUB_OUTPUT

  get_agent_account_id:
    needs: build_target_names
    runs-on: ubuntu-latest
    environment: ${{ needs.build_target_names.outputs.TargetEnvironment }}-preapproved
    outputs:
      account_id: "${{ steps.output_account_id.outputs.account_id}}"
    steps:
      - name: output account id
        id: output_account_id
        run: echo "account_id=${{ vars.AWS_ACCOUNT_ID }}" >> $GITHUB_OUTPUT

  oracle-oem-patching:
    needs: [build_target_names,get_oem_account_id]
    if: ${{ github.event.inputs.PatchOEMHost == 'yes' }}
    name: oracle-oem-patching
    environment: ${{ needs.build_target_names.outputs.TargetOemEnvironment }}-preapproved
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ministryofjustice/hmpps-delius-operational-automation:0.78.0
    timeout-minutes: 1440
    env:
      command: ansible-playbook operations/ansible/site.yml -v -e force_role=oracle-oms-setup -e role=oracle-oms-setup --tags oracle_oem_patch_upgrade 
      inventory: inventory/ansible
    continue-on-error: false
    steps:
      - name: Checkout From hmpps-delius-operational-automation
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/hmpps-delius-operational-automation
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            playbooks/ansible.cfg
          path: ansible
          ref: ${{ github.event.inputs.SourceCodeVersion }}
          fetch-depth: 0

      - name: Checkout Ansible Inventory From modernisation-platform-configuration-management
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            ansible/hosts
            ansible/group_vars
          path: inventory
          ref: ${{ github.event.inputs.SourceConfigVersion }}
          fetch-depth: 0

      - name: Checkout Ansible Required Roles From modernisation-platform-configuration-management
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            ansible/roles/oracle-oms-setup
            ansible/roles/oracle-oem-agent-setup
            ansible/roles/secretsmanager-passwords
            ansible/roles/get-ec2-facts
            ansible/roles/get-modernisation-platform-facts
            ansible/roles/epel
            ansible/site.yml
          path: operations
          ref: ${{ github.event.inputs.SourceConfigVersion }}
          fetch-depth: 0

      - name: Configure AWS Credentials
        id: login-aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ needs.get_oem_account_id.outputs.account_id }}:role/modernisation-platform-oidc-cicd"
          role-session-name: "hmpps-delius-operational-automation-${{ github.run_number }}"
          role-duration-seconds: 21600
          aws-region: "eu-west-2"

      - name: Start Ansible OEM Patching
        shell: bash
        run: |
          export ANSIBLE_CONFIG=$ansible_config
          $command -i $inventory --limit server_type_hmpps_oem -e target="${{ needs.build_target_names.outputs.TargetOemHost }}" ${{ github.event.inputs.VerboseOutput != '' && github.event.inputs.VerboseOutput || '-v' }}

  oracle-agent-patching:
    needs: [build_target_names,get_agent_account_id,oracle-oem-patching]
    if: ${{ github.event.inputs.PatchAgents == 'yes' }}
    name: oracle-agent-patching
    environment: ${{ needs.build_target_names.outputs.TargetEnvironment }}-preapproved
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ministryofjustice/hmpps-delius-operational-automation:0.78.0
    timeout-minutes: 1440
    env:
      command: ansible-playbook operations/ansible/site.yml -e force_role=oracle-oem-agent-setup -e role=oracle-oem-agent-setup --tags agent_ru_upgrade,oem_agent_gold_image 
      inventory: inventory/ansible
    continue-on-error: false
    steps:
      - name: Checkout From hmpps-delius-operational-automation
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/hmpps-delius-operational-automation
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            playbooks/ansible.cfg
          path: ansible
          ref: ${{ github.event.inputs.SourceCodeVersion }}
          fetch-depth: 0

      - name: Checkout Ansible Inventory From modernisation-platform-configuration-management
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            ansible/hosts
            ansible/group_vars
          path: inventory
          ref: ${{ github.event.inputs.SourceConfigVersion }}
          fetch-depth: 0

      - name: Checkout Ansible Required Roles From modernisation-platform-configuration-management
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            ansible/roles/oracle-oem-agent-setup
            ansible/roles/secretsmanager-passwords
            ansible/roles/get-ec2-facts
            ansible/roles/get-modernisation-platform-facts
            ansible/roles/epel
            ansible/site.yml
          path: operations
          ref: ${{ github.event.inputs.SourceConfigVersion }}
          fetch-depth: 0

      - name: Configure AWS Credentials
        id: login-aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ needs.get_agent_account_id.outputs.account_id }}:role/modernisation-platform-oidc-cicd"
          role-session-name: "hmpps-delius-operational-automation-${{ github.run_number }}"
          role-duration-seconds: 21600
          aws-region: "eu-west-2"
        
      - name: Start OEM Agent Update
        run: |
          export ANSIBLE_CONFIG=$ansible_config
          $command -i $inventory -e ansible_aws_ssm_bucket_name=${{ vars.ANSIBLE_AWS_SSM_BUCKET_NAME }} -e target=${{needs.build_target_names.outputs.TargetHost}} ${{ github.event.inputs.VerboseOutput != '' && github.event.inputs.VerboseOutput || '-v' }}
        