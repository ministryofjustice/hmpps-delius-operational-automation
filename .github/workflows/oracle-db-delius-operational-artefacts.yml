name: "Oracle: Delius Operational Artefacts"
run-name: "Oracle: ${{ github.event.inputs.TargetEnvironment }}_delius_operational_artefacts"
on:
  workflow_dispatch:
    inputs:
      TargetEnvironment:
        description: "Target environment"
        required: true
        type: choice
        options:
          - "delius-core-dev"
          - "delius-core-test"
          - "delius-core-training"
          - "delius-core-stage"
          - "delius-core-pre-prod"
          - "delius-core-prod"
      DeployUsers:
        description: "Create Delius database users? (Read-Only, Read-Write, DBA)"
        type: choice
        default: "no"
        options: 
          - "yes"
          - "no"
      DeployPerformanceTestUsers:
        description: "Create large set of users for performance testing?"
        type: choice
        default: "no"
        options:
          - "yes"
          - "no"
      DeployAuditStubUsers:
        description: "Create Delius Audited Interaction Stub Users (Applciation Users with Access to Production Data on Non-Production Environments)?"
        type: choice
        default: "no"
        options:
          - "yes"
          - "no"
      DeployPlanManagement:
        description: "Create Job to purge aged SQL based on dynamically sampled statistics?"
        type: choice
        default: "no"
        options:
          - "yes"
          - "no"
      DeployMVRefreshPurgeChildCursors:
        description: "Create Job to purge MV Refresh Child Cursors?"
        type: choice
        default: "no"
        options:
          - "yes"
          - "no"
      SourceCodeVersion:
        description: "Source version for the  hmpps-delius-operation-automation. Enter a pull request, branch, commit ID, tag, or reference."
        type: string
        default: "main"
      SourceConfigVersion:
        description: "Source version for the modernisation-platform-configuration-management. Enter a pull request, branch, commit ID, tag, or reference."
        type: string
        default: "main"
      SourceAuditStubAccountsVersion:
        description: "Source version for the hmpps-delius-audit-stub-accounts repository. Enter a pull request, branch, commit ID, tag, or reference."
        type: string
        default: "main"

env:
  ansible_config: operations/playbooks/ansible.cfg
  command: ansible-playbook operations/playbooks/delius-artefacts-playbook.yml
  inventory: inventory/ansible

# Allow permissions on repository and docker image respectively 
permissions:
  contents: read
  packages: read
  id-token: write

jobs:
  deployment:
    environment: ${{ github.event.inputs.TargetEnvironment }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ministryofjustice/hmpps-delius-operational-automation:0.41.0
    timeout-minutes: 1440
    continue-on-error: false
    steps:

      - name: Prepare Delius Primary And All Inventory Name
        id: prepareinventorynames
        run: |
          hosts="environment_name_$(echo ${{ github.event.inputs.TargetEnvironment }} | sed 's/delius-core-dev/delius_core_development_dev/;s/delius-core-test/delius_core_test_test/;s/delius-core-training/delius_core_test_training/;s/delius-core-stage/delius_core_preproduction_stage/;s/delius-core-pre-prod/delius_core_preproduction_pre_prod/;s/delius-core-prod/delius_core_production_prod/')_delius_primarydb"
          echo "hosts=${hosts}" >> $GITHUB_OUTPUT
          echo "allHost=$(echo ${hosts} | sed 's/delius_primarydb/all/')" >> $GITHUB_OUTPUT

      - name: Checkout Inventory From modernisation-platform-configuration-management
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            ansible/hosts
            ansible/group_vars
          path: inventory
          ref: ${{ github.event.inputs.SourceConfigVersion }}
          fetch-depth: 0

      - name: Checkout From hmpps-delius-operational-automation
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/hmpps-delius-operational-automation
          sparse-checkout-cone-mode: false
          sparse-checkout: playbooks
          path: operations
          ref: ${{ github.event.inputs.SourceCodeVersion }}
          fetch-depth: 0

      - name: Generate Token For Access To hmpps-delius-audit-stub-accounts
        if: ${{ github.event.inputs.DeployAuditStubUsers == 'yes' }}
        uses: actions/create-github-app-token@v1
        id: generate_token
        with:
          app-id: ${{ secrets.HMPPS_BOT_APP_ID }}
          private-key: ${{ secrets.HMPPS_BOT_PRIVATE_KEY }}
          repositories: hmpps-delius-audit-stub-accounts

      - name: Checkout From hmpps-delius-audit-stub-accounts
        if: ${{ github.event.inputs.DeployAuditStubUsers == 'yes' }}
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/hmpps-delius-audit-stub-accounts
          token: ${{ steps.generate_token.outputs.token }}
          sparse-checkout-cone-mode: false
          sparse-checkout: audit_stub_accounts
          path: stub
          ref: ${{ github.event.inputs.SourceAuditStubAccountsVersion }}
          fetch-depth: 0

      - name: Configure AWS Credentials
        id: login-aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: "arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/modernisation-platform-oidc-cicd"
          role-session-name: "hmpps-delius-operational-automation-${{ github.run_number }}"
          aws-region: "eu-west-2"

      - name: Run Delius Artefacts Playbook
        run: |
          export ANSIBLE_CONFIG=$ansible_config
          $command -i $inventory -e ansible_aws_ssm_bucket_name=${{ vars.ANSIBLE_AWS_SSM_BUCKET_NAME }} \
          -e @$inventory/group_vars/${{ steps.prepareinventorynames.outputs.allHost }}.yml \
          -e hosts=${{ steps.prepareinventorynames.outputs.hosts }} \
          -e deploy_users=${{ github.event.inputs.DeployUsers }} \
          -e deploy_performance_test_users=${{ github.event.inputs.DeployPerformanceTestUsers }} \
          -e deploy_audit_stub_users=${{ github.event.inputs.DeployAuditStubUsers }} \
          -e deploy_plan_management=${{ github.event.inputs.DeployPlanManagement }} \
          -e deploy_mv_refresh_purge_child=${{ github.event.inputs.DeployMVRefreshPurgeChildCursors }}