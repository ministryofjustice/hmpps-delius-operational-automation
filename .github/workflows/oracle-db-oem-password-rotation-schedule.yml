name: "Oracle: Schedule OEM Password Rotation"
on:
  schedule:
    - cron: '00 11 * * WED'
    - cron: '00 20 * * SUN'

jobs:
  prepare-run-matrix:
    runs-on: ubuntu-latest
    outputs:
      scheduled_matrix: ${{ steps.filter-password-rotation-schedule.outputs.scheduling_matrix }}
    steps:
      - name: Checkout Oem Password Rotation Schedule
        uses: actions/checkout@v4
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: |
             .github/workflows/oracle-db-oem-password-rotation-schedule.json
          path: operations
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.SourceCodeVersion || 'main' }}
          fetch-depth: 0

      - name: Filter Oem Password Rotation Schedule
        id: filter-password-rotation-schedule
        run: |
             SCHEDULED_JSON=$(jq '[.[] | select (.CronSchedule=="${{ github.event.schedule }}") | {"TargetOemEnvironment","TargetEnvironmentName","SyncMonitoringPasswords","RotateRMANPassword","RotateOEMPasswords"}]' operations/.github/workflows/oracle-db-oem-password-rotation-schedule.json | jq '{include: .}')
             echo "scheduling_matrix="$(echo ${SCHEDULED_JSON} | sed 's/ //g') >> $GITHUB_OUTPUT

  report-schedule-password-rotation:
    needs: prepare-run-matrix
    runs-on: ubuntu-latest
    if: ${{ needs.prepare-run-matrix.outputs.scheduled_matrix != '{"include":[]}' }}
    steps:
      - name: Report Oem Password Rotation Scheduled to Run
        id: report-run
        run: |
              echo "Running Oem Password Rotation for these targets: ${{ needs.prepare-run-matrix.outputs.scheduled_matrix }}"
 
  report-no-scheduled-password-rotation:
    needs: prepare-run-matrix
    runs-on: ubuntu-latest
    if: ${{ needs.prepare-run-matrix.outputs.scheduled_matrix == '{"include":[]}' }}
    steps:
        - name: Report Nothing to Do
          id: report-no-run
          run: |
              echo "No target environments scheduled for Oem password rotation run."

  password-rotation:
    needs: prepare-run-matrix
    if: ${{ needs.prepare-run-matrix.outputs.scheduled_matrix != '{"include":[]}' }}
    strategy:
      matrix: ${{fromJson(needs.prepare-run-matrix.outputs.scheduled_matrix)}}
    name: Oem Password Rotation
    uses:
      ministryofjustice/hmpps-delius-operational-automation/.github/workflows/oracle-db-oem-password-rotation.yml@main
    with:
      TargetOemEnvironment: ${{ matrix.TargetOemEnvironment }}
      TargetEnvironmentName: ${{ matrix.TargetEnvironmentName }}
      SyncMonitoringPasswords: ${{ matrix.SyncMonitoringPasswords }}
      RotateRMANPassword: ${{ matrix.RotateRMANPassword }}
      RotateOEMPasswords: ${{ matrix.RotateOEMPasswords }}
