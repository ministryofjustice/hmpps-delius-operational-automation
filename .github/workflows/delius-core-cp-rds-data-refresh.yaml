---
name: CP RDS Data Refresh

on:
  workflow_dispatch:
    inputs:
      component:
        description: Delius Core component to refresh data for
        required: true
        type: choice
        options:
          - gdpr
          - merge
      source_env:
        description: Environment to copy data from
        required: true
        type: choice
        options:
          - test
      destination_env:
        description: Environment to copy data to
        required: true
        type: choice
        options:
          - dev

permissions:
  contents: read

jobs:
  stop-destination-environment:
    name: Stop ${{ github.event.inputs.destination_env }} Environment
    runs-on: ubuntu-22.04
    environment:
      name: ${{ github.event.inputs.destination_env }}
    steps:
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CERT }}" > ca.crt
        kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
        kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
        kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=hmpps-delius-core-${{ github.event.inputs.destination_env }}
        kubectl config use-context ${KUBE_CLUSTER}
      env:
        KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}

    - name: Stop ${{ github.event.inputs.destination_env }} Environment
      run: |
        kubectl scale deployment ${{ github.event.inputs.component }} --replicas=0

  refresh-db:
    name: Refresh DB
    runs-on: ubuntu-22.04
    environment:
      name: ${{ github.event.inputs.source_env }}
    needs: stop-destination-environment
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Install kubectl
        uses: azure/setup-kubectl@v3.2
        with:
          version: 'v1.26.0' # default is latest stable
        id: kubectl_install

      - uses: azure/setup-helm@v4.2.0
        with:
           version: 'v3.15.3' # default is latest (stable)
        id: install

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CERT }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=hmpps-delius-core-${{ github.event.inputs.destination_env }}
          kubectl config use-context ${KUBE_CLUSTER}
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}

      - name: Uninstall DB Refresh chart
        run: helm uninstall refresh-db-${{ github.events.inputs.component }} --ignore-not-found

      - name: DB Refresh
        working-directory: helm/refresh-db
        run: |
          helm install refresh-db . \
            --set sourceEnvironment=${{ github.event.inputs.source_env }} \
            --set destinationEnvironment=${{ github.event.inputs.destination_env }} \
            --set slackWebhookUrl=${{ secrets.SLACK_WEBHOOK_URL }}

  start-destination-environment:
    name: Start ${{ github.event.inputs.destination_env }} Environment
    runs-on: ubuntu-22.04
    environment:
      name: ${{ github.event.inputs.destination_env }}
    needs:
      - refresh-db
    steps:
    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CERT }}" > ca.crt
        kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
        kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN }}
        kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=hmpps-delius-core-${{ github.event.inputs.destination_env }}
        kubectl config use-context ${KUBE_CLUSTER}
      env:
        KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}

    - name: Start ${{ github.event.inputs.destination_env }} Environment
      run: |

        kubectl scale deployment ${{ github.event.inputs.component }} --replicas=1