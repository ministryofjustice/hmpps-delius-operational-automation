name: "Oracle: Schedule Backups"
on:
  # Schedules are defined in UTC.  Therefore for each Schedule expression we
  # need to provide a GMT and BST variant (GMT=UTC, BST=1 hour ahead of UTC)
  # Both schedules will be triggered but only one will be acted on depending
  # on whether it is currently GMT or BST.
  schedule:
    - cron: '0 7 * * 1,2,4,5'   # 7am GMT Runs (Mon,Tue,Thu,Fri)
    - cron: '0 6 * * 1,2,4,5'   # 7am BST Runs (Mon,Tue,Thu,Fri)
    - cron: '0 7 * * 3'         # 7am GMT Runs (Wed)
    - cron: '0 6 * * 3'         # 7am BST Runs (Wed)
    - cron: '30 6 * * 3'        # 6:30am GMT Runs (Wed)
    - cron: '30 5 * * 3'        # 6:30am BST runs (Wed)

jobs:

  prepare-run-matrix:
    runs-on: ubuntu-latest
    outputs:
      scheduled_matrix: ${{ steps.filter-backups-schedule.outputs.scheduling_matrix }}
      type: object
    steps:
      - name: Checkout Backups Schedule
        uses: actions/checkout@v4
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: |
             .github/workflows/oracle-db-backups-schedule.json
             common/files/convert_cron_expression_to_London.py
          path: operations
          ref: main
          fetch-depth: 0

      - name: Filter Backups Schedule
        id: filter-backups-schedule
        run: |
          # Convert Cron Expression for the Schedule to Europe/London timezone
          CRONSCHEDULE=$(python3 operations/common/files/convert_cron_expression_to_London.py "${{ github.event.schedule }}")
          SCHEDULED_JSON=$(jq --arg CRONSCHEDULE "$CRONSCHEDULE" '[.[] | select (.CronSchedule==$CRONSCHEDULE) | {"TargetEnvironment","TargetHost","Period"}]' operations/.github/workflows/oracle-db-backups-schedule.json | jq '{include: .}')
          echo "scheduling_matrix="$(echo ${SCHEDULED_JSON} | sed 's/ //g') >> $GITHUB_OUTPUT

  report-schedule-backup:
    needs: prepare-run-matrix
    runs-on: ubuntu-latest
    if: ${{ fromJson(needs.prepare-run-matrix.outputs.scheduled_matrix).include[0] }}
    steps:
      - name: Report Backups Scheduled to Run
        id: report-run
        run: |
              echo "Running Backups for these targets: ${{ needs.prepare-run-matrix.outputs.scheduled_matrix }}"
 
  report-no-scheduled-backup:
    needs: prepare-run-matrix
    runs-on: ubuntu-latest
    if: ${{ ! fromJson(needs.prepare-run-matrix.outputs.scheduled_matrix).include[0] }}
    steps:
        - name: Report Nothing to Do
          id: report-no-run
          run: |
              echo "No targets scheduled for backup run."

  run-backup:
    needs: prepare-run-matrix
    if: ${{ fromJson(needs.prepare-run-matrix.outputs.scheduled_matrix).include[0] }}
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.prepare-run-matrix.outputs.scheduled_matrix)}}
    name: "run-${{ format('{0}-{1}-{2}', matrix.TargetEnvironment, matrix.Period, matrix.TargetHost) }}-backup"
    uses:
      ministryofjustice/hmpps-delius-operational-automation/.github/workflows/oracle-db-backup.yml@main
    with:
      TargetEnvironment: ${{ matrix.TargetEnvironment }}
      TargetHost: ${{ matrix.TargetHost }}
      Period: ${{ matrix.Period }}
    secrets: inherit
