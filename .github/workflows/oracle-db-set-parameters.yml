name: "Oracle: Set Database Parameters"
run-name: "Oracle: ${{ format('{0}_{1}', github.event.inputs.TargetEnvironment, github.event.inputs.TargetHost) }}_parameters"
on:
  workflow_dispatch:
    inputs:
      TargetEnvironment:
        description: "Target environment"
        required: true
        type: choice
        options:
          - "delius_core_development_dev"
          - "delius_core_development_mis_dev"
      TargetHost:
        description: "Database target host"
        required: true
        type: choice
        options:
          - "delius_primarydb"
          - "delius_standbydb1"
          - "delius_standbydb2"
          - "mis_primarydb"
          - "mis_standbydb1"
          - "misboe_primarydb"
          - "misboe_standbydb1"
          - "misdsd_primarydb"
          - "misdsd_standbydb1"

permissions:
  contents: read
  packages: read

jobs:
  # Start deployment container job based on the build delius-ansible-aws image
  deployment:
    name: oracle-db-parameters
    environment: delius-core-dev
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ministryofjustice/hmpps-delius-operational-automation:0.1
    timeout-minutes: 1440
    env:
      command: ansible-playbook operations/ansible/roles/oracle-db-parameters/set_oracle_parameters.yml
      inventory: inventory/ansible
    continue-on-error: false
    steps:

      - name: Checkout Role From modernisation-platform-configuration-management
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          sparse-checkout-cone-mode: false
          sparse-checkout: ansible/roles/oracle-db-parameters
          path: operations
          ref: ${{ github.event.inputs.SourceConfigVersion }}
          fetch-depth: 0

      - name: Checkout Inventory From modernisation-platform-configuration-management
        uses: actions/checkout@v4
        with:
          repository: ministryofjustice/modernisation-platform-configuration-management
          sparse-checkout-cone-mode: false
          sparse-checkout: |
            ansible/hosts
            ansible/group_vars
          path: inventory
          ref: ${{ github.event.inputs.SourceConfigVersion }}
          fetch-depth: 0

      - name: Configure AWS Credentials
        id: login-aws
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.CICD_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Start Set Parameters
        run: $command -i $inventory -e target_host=environment_name_${{ github.event.inputs.TargetEnvironment }}_${{ github.event.inputs.TargetHost }}