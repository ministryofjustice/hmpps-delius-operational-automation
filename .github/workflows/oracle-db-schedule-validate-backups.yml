name: "Oracle: Schedule Validate Backups"
on:
  push:
    branches:
       - "DBA-662"
  schedule:
    - cron: '30 10 * * WED'
    - cron: '20 11 * * WED'
    - cron: '30 12 * * WED'
jobs:
  prepare-run-matrix:
    runs-on: ubuntu-latest
    outputs:
      scheduled_matrix: ${{ steps.filter-validate-schedule.outputs.scheduling_matrix }}
    steps:
      - name: Checkout Validate Backups Schedule
        uses: actions/checkout@v4
        with:
          sparse-checkout-cone-mode: false
          sparse-checkout: |
             .github/workflows/oracle-db-validate-backups-schedule.json
          path: operations
          ref: "DBA-662"
          #ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.SourceCodeVersion || 'main' }}
          fetch-depth: 0

      - name: Filter Validate Schedule
        id: filter-validate-schedule
        run: |
             # cat operations/.github/workflows/oracle-db-validate-backups-schedule.json
             SCHEDULED_JSON=$(jq '[.[] | select (.CronSchedule!="${{ github.event.schedule }}") | {"TargetEnvironment","TargetHost"}]' operations/.github/workflows/oracle-db-validate-backups-schedule.json | jq '{include: .}')
             echo "scheduling_matrix="${SCHEDULED_JSON} >> $GITHUB_OUTPUT

  validate-backup:
    needs: prepare-run-matrix
    runs-on: ubuntu-latest
    if: ${{ needs.prepare-run-matrix.outputs.scheduled_matrix != '{"include":[]}' }}
    steps:
      - name: Report
        id: report-run
        run: |
              echo "Want to Run ${{ needs.prepare-run-matrix.outputs.scheduled_matrix }} "

  no-validate-backup:
    needs: prepare-run-matrix
    runs-on: ubuntu-latest
    if: ${{ needs.prepare-run-matrix.outputs.scheduled_matrix == '{"include":[]}' }}
    steps:
        - name: No Report
          id: report-no-run
          run: |
              echo "Do not want to Run ${{ needs.prepare-run-matrix.outputs.scheduled_matrix }} "