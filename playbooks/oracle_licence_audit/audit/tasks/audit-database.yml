- name: Get instance name running, should be only one
  shell: ps -ef | grep ora_smon | grep -v grep | cut -d'_' -f3
  register: db

- name: Set fact for output names we do expect from running the scripts
  set_fact:
    sql_output: "{{ inventory_hostname }}_{{ db.stdout }}"
    cpu_output: "{{ inventory_hostname }}-ct_cpuq.txt"

- name: Create work directory on remote host
  file:
    path: "{{ audit_dir }}"
    state: directory
    owner: oracle
    mode: "777"

- name: Download cpuq.sh from s3
  shell: |
    export PATH=$PATH:/usr/local/bin
    aws s3 cp s3://{{ dependencies_bucket.name }}/dependencies/oracle/utils/cpuq.sh {{ audit_dir }}/cpuq.sh

- name: Execute cpu script
  shell: |
    cd {{ audit_dir }}
    chmod +x cpuq.sh 
    echo 'y' | ./cpuq.sh {{ audit_dir }} > /dev/null 2>&1
  register: cpuout

- name: Fetch cpu output files
  fetch:
    src: "{{ audit_dir }}/{{ cpu_output }}"
    dest: "{{ audit_dir }}/"
    flat: yes

- name: Only Execute SQL Script If Database Is Running
  when: db.stdout != ''
  block:

    - name: Download Oracle ReviewLite23.3.sql from s3
      shell: |
        export PATH=$PATH:/usr/local/bin
        aws s3 cp s3://{{ dependencies_bucket.name }}/dependencies/oracle/utils/ReviewLite23.3.sql {{ audit_dir }}/ReviewLite23.3.sql
      args:
        creates: "{{ audit_dir }}/ReviewLite23.3.sql"

    - name: Execute Oracle ReviewLite23.3.sql
      shell:
        cmd: |
          . ~/.bash_profile
          cd {{ audit_dir }}
          . ~/.bash_profile
          sqlplus -s / as sysdba << EOF
            SELECT SYSDATE FROM DUAL;
            exit
          EOF
      become: yes
      become_method: sudo
      become_user: oracle
      register: sqlout


    - name: Create database directory on controller
      delegate_to: localhost
      become: no
      file:
        path: "{{ audit_dir }}/{{ sql_output }}"
        state: directory

    - name: Find database output files
      find:
        path: "{{ audit_dir }}/{{ sql_output }}"
        recurse: yes
        patterns: "*.csv"
      register: database_output_files

    - name: Fetch database output files
      fetch:
        src: "{{ item.path }}"
        dest: "{{ audit_dir }}/{{ sql_output }}/"
        flat: yes
      with_items: "{{ database_output_files.files }}"

- name: Upload database output directory to S3 From Controller
  delegate_to: localhost
  become: no
  shell: |
    export PATH=$PATH:/usr/local/bin
    aws s3 cp {{ audit_dir }} s3://{{ dependencies_bucket.name }}/{{ audit_output }} --recursive --exclude "*" --include "*-db-*"
