---
- name: Delete Unused DBID Backups
  debug:
    msg: "Deleting Folder {{ defunct_dbid }} which was last used on {{ last_used }}."

# AWS_S3 Module is too slow for large bumber of backup pieces
# - name: List Objects to be deleted from a bucket
#   amazon.aws.aws_s3:
#     bucket: "{{ bucket }}"
#     prefix: "file_chunk/{{ defunct_dbid }}"
#     mode: list
#   register: getbucket
#
#
# - name: Delete Objects from the bucket
#   amazon.aws.aws_s3:
#     bucket: "{{ bucket }}"
#     object: "{{ s3_key }}"
#     mode: delobj
#   loop: "{{ getbucket.s3_keys }}"
#   loop_control:
#      loop_var: s3_key

- name: Delete {{ defunct_dbid }} Backups
  shell: |
    export PATH=$PATH:/usr/local/bin
    aws s3 rm s3://{{ bucket }}/file_chunk/{{ defunct_dbid }}/ --recursive
  register: aws_s3_rm
  vars:
    ansible_aws_ssm_timeout: 3600

- name: Create Notification
  set_fact:
    notification_msg: |
      Deleted folder for {{ database_primary_sid | default(database_standby_sid) }}
      DBID {{ defunct_dbid }}  which was last used on {{ last_used }}.
      This released {{ folder_size }} of S3 storage.

- name: Unregister DBID if Needed
  block:
    - name: Unregister from RMAN Catalog
      script: unregister_dbid.sh "{{ defunct_dbid }}" "{{ connect_to_catalog }}"
      register: unregister

    - name: Show Unregister
      debug: var=unregister

    - name: Update Notification
      set_fact:
        notification_msg: "{{ notification_msg }} DBID has been unregistered from the RMAN catalog."

  when: defunct_dbid in registered_dbids
# Only send Slack notification if the aws s3 rm command provided any output.
# Because the Inventory file is generated by AWS at a "random" time of day, it is possible that
# the same inventory file may be used 2 days in a row, the first day deleting the old backups but on the
# second day finding nothing new to delete.   Do not send a notification if nothing has been deleted.
- name: Send notification message via Slack all options
  community.general.slack:
    token: "{{ getslacktoken.stdout }}"
    msg: "{{ notification_msg }}"
    channel: "{{ slack_channel }}"
    username: "Defunct Backup Deletion on {{ inventory_hostname }}"
    icon_emoji: ":put_litter_in_its_place:"
  when: aws_s3_rm.stdout_lines | length > 0
  delegate_to: localhost
  become: no
