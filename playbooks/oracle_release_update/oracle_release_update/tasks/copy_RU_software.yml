---

# Ensure Software Patch Directory Exists
- name: Create Oracle Patch Directory
  file:
     path: "{{ oracle_patch_directory }}"
     state: directory
     owner: oracle
     group: oinstall
  become: no

# We must use the GI Release Update Patch as this is a Superset patch which contains the patches for both SIHA and Database Home
- name: Copy Superset and OJVM Patches when not using Combo Patch
  when: 
     - superset_patch_id is defined
  block:

      - name: Download Release Update Grid Infrastructure Software
        shell: 'aws s3 cp s3://{{ dependencies_bucket_name }}/dependencies/oracle/rdbms/{{ GI_RU }} {{ oracle_patch_directory }}'
        args:
          creates: "{{ oracle_patch_directory }}/{{ GI_RU }}"

      - name: Unzip Release Update Software
        unarchive:
          src: "{{ oracle_patch_directory }}/{{ GI_RU }}"
          dest: "{{ oracle_patch_directory }}"
          creates:  "{{ oracle_patch_directory }}/{{ superset_patch_id }}"
          remote_src: yes

      - name: Download OJVM Release Update Software
        shell: 'aws s3 cp s3://{{ dependencies_bucket_name }}/dependencies/oracle/rdbms/{{ OJVM_RU }} {{ oracle_patch_directory }}'
        args:
          creates: "{{ oracle_patch_directory }}/{{ OJVM_RU }}"    

      - name: Unzip OJVM Release Update Software
        unarchive:
          src: "{{ oracle_patch_directory }}/{{ OJVM_RU }}"
          dest: "{{ oracle_patch_directory }}"
          creates:  "{{ oracle_patch_directory }}/{{ ojvm_patch_id }}"
          remote_src: yes

- name: Copy Combo Patches when used
  when: 
     - combo_patch_id is defined
  block:

      - name: Check if Combo Patch Software Already Uploaded
        stat:
           path: "{{ oracle_patch_directory }}/{{ COMBO_RU }}"
        register: combo_patch_file

      # We cannot assume the necessary python libraries are available to
      # download directly from S3 to the host so we download to the Ansible
      # controller and then upload to the host from there
      # - name: Download Release Update Combo Patch Software
      #   aws_s3:
      #     bucket: "{{ dependencies_bucket_name }}"
      #     object: "/dependencies/oracle/rdbms/{{ COMBO_RU }}"
      #     dest: "/tmp/{{ COMBO_RU }}"
      #     mode: get
      #   delegate_to: localhost
      #   become: no
      #   when: not combo_patch_file.stat.exists

      # - name: Upload Combo Patch Software to Database Host
      #   copy:
      #      src: "/tmp/{{ COMBO_RU }}"
      #      dest: "{{ oracle_patch_directory }}"
      #   when: not combo_patch_file.stat.exists

      - name: Download Release Update Combo Patch Software
        shell: |
               . ~/.bash_profile
               aws s3 cp s3://{{ dependencies_bucket_name }}/dependencies/oracle/rdbms/{{ COMBO_RU }} {{ oracle_patch_directory }}/{{ COMBO_RU }}
        when: not combo_patch_file.stat.exists

      - name: Unzip Release Update Combo Patch Software
        unarchive:
          src: "{{ oracle_patch_directory }}/{{ COMBO_RU }}"
          dest: "{{ oracle_patch_directory }}"
          creates:  "{{ oracle_patch_directory }}/{{ combo_patch_id }}"
          remote_src: yes