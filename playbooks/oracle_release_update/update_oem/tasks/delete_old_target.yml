
---

# Get name of the existing target for the specified target type
# We only expect to see 1 HAS target, 1 ASM target and 1 Listener target on a given host (and all shouold be running from the Grid Infrastructure Home)
- name: Generate Command to Get Existing Target Name
  shell: |
        . ~/.bash_profile
        {{ emcli }} login -username=sysman -password=${SYSMAN_PASSWORD} -force 1>&2
        {{ emcli }} sync 1>&2
        {{ emcli }} list -resource="Targets" -search="HOST_NAME='{{ agent_host }}'" -search="TARGET_TYPE='{{ target_type }}'" -column="TARGET_NAME" -script -noheader
  register: existing_target_name
  changed_when: false
  environment:
          SYSMAN_PASSWORD: "{{ sysman_password }}"

- name: Set Command to Check if Target Home is Current Grid Infrastructure Home
  set_fact:
      get_target_home_cmd: "{{ emcli }} list -resource=\"TargetProperties\" -search=\"TARGET_NAME='{{ existing_target_name.stdout }}'\" -column=\"PROPERTY_NAME,PROPERTY_VALUE\" -script | grep OracleHome | grep -c {{ oracle_grid_new_oracle_home }} | cat"

- name: Get the Target Home
  shell: |
         . ~/.bash_profile
         {{ emcli }} login -username=sysman -password=${SYSMAN_PASSWORD} -force 1>&2
         {{ emcli }} sync 1>&2
         {{ get_target_home_cmd }}
  register: get_target_home_match 
  changed_when: false
  when: existing_target_name.stdout != ''
  environment:
      SYSMAN_PASSWORD: "{{ sysman_password }}"

# Delete Existing Target if it is not related to the New Grid Infrastructre Home
- name: Delete Existing Target
  when:
     - existing_target_name.stdout != ''
     - get_target_home_match.stdout != '1'
  block:

      - name: Delete Target from Repository
        shell: |
              . ~/.bash_profile
                {{ emcli }} login -username=sysman -password={{ sysman_password }} -force
                {{ emcli }} sync
                {{ emcli }} delete_target -name="{{ existing_target_name.stdout }}" -type="{{ target_type }}"

      # Pause Until OEM has Finished Deleting the Target
      # (Otherwise it will fail when we try to add the new target)
      - name: Wait for Existing Target Deletion
        script: wait_for_target_deletion.sh {{ existing_target_name.stdout }}
        changed_when: false