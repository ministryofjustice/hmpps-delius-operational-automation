---

  - name: Get delius_app_schema password from ssm
    shell: aws ssm get-parameters --region {{ region }}--with-decryption --name /{{ environment_name }}/{{ project_name }}/delius-database/db/delius_app_schema_password | jq -r '.Parameters[].Value'
    changed_when: false
    register: delius_app_schema_password
    no_log: true

  - name: Get delius_pool password from ssm
    shell: aws ssm get-parameters --region {{ region }}--with-decryption --name /{{ environment_name }}/{{ project_name }}/delius-database/db/delius_pool_password | jq -r '.Parameters[].Value'
    changed_when: false
    register: delius_pool_password
    no_log: true

  - name: Get Snapshot Standby Conversion Date
    script: get_snapshot_standby_restore_point.sh
    register: get_snapshot_standby_conversion_date

  - name: Set Snapshot Standby Conversion Date
    set_fact:
        snapshot_standby_conversion_date: "{{ get_snapshot_standby_conversion_date.stdout }}"

  - name: Report Snapshot Standby Conversion Date
    debug:
       msg:  "Pushing Snapshot Standby Audit Date Created After {{ snapshot_standby_conversion_date }}"

  - name: Push the Audit Data
    script: push_audit_data_to_primary.sh {{ primary_database }} {{ snapshot_standby_conversion_date }}
    register: push_audit_data_to_primary
    environment:
       DELIUS_APP_SCHEMA_PASSWORD: "{{ delius_app_schema_password.stdout }}"
       DELIUS_POOL_PASSWORD: "{{ delius_pool_password.stdout }}"
    vars:
      ansible_aws_ssm_timeout: 7200

  - name: Report Audit Data Transfer Output
    debug: var=push_audit_data_to_primary.stdout_lines

  # If audit preservation is enabled then we must propagate the pushed data to the repository
  # by overriding the previous audit capture date (since the pushed audit data is likely to
  # be older than audit data which was propagated from the primary)
  - name: Propagate Audit Data to Repository
    import_tasks: ../delius_audited_interaction/delius_audited_interaction/tasks/call_audit_propagate_automation.yml 
    when: hostvars[groups[database_type + '_primarydb'][0]]['audited_interaction_repo'] is defined
    delegate_to: localhost
    delegate_facts: true
    become: no
    vars:
       override_capture_date: "{{ snapshot_standby_conversion_date }}"
       database_primary_sid: "{{ primary_database }}"
       audited_interaction_repo: "{{ hostvars[groups[database_type + '_primarydb'][0]]['audited_interaction_repo'] }}"
       engineering_account_id: "{{ account_id }}"