# # Allow up to 2 hours for the password rotation to complete.  We can re-enable the monitoring before
# # that once the job completes, but this provides a hard-stop to ensure monitoring resumes even if the
# # job has failed or is not progressing at a reasonable speed.

# Disable OEM Native Monitoring to avoid noise due to agent / broker connection failures during password changes
- name: Disable Monitoring
  block:
    - name: Start database monitoring blackout
      include_role:
        name: ../oem_blackout/oem-blackout
      vars:
        target: "{{ inventory_hostname }}"
        action: "start"
        object_type: "all"
        blackout: "PASSWORD_ROTATION_{{ environment_name }}"
        duration: ""
        allow_jobs: false

    # Disable OEM Script-Based Monitoring to avoid noise due to agent / broker connection failures during password changes
    - name: Temporarily Exclude Target Hosts from Monitoring During Password Changes
      include_role:
        name: ../oem_blackout/oem-blackout
        tasks_from: script_exclusion.yml
      vars:
        action: "start"
        blackout: "PASSWORD_ROTATION_{{ environment_name }}"
        duration: 7200

# Check the databases configured on the OEM server.
# This will usually be the OEM Repository database and RMAN catalog database

- name: Rotate OEM Related Database Passwords
  block:
    - name: Rotate OEM and RMAN Database Passwords
      include_tasks: rotate_oem_database_passwords.yml
      vars:
        oem_db_name: "{{ database_name }}"
      loop:
        - "{{ db_configs['RCVCAT']['rcvcat_db_name'] }}"
        - "{{ db_configs['EMREP']['emrepo_db_name'] }}"
      loop_control:
        loop_var: database_name

    - name: Set ASM Secret Manager Name
      set_fact:
        secret_name: "/ec2/{{ ec2_name }}/asm-passwords"

    - name: Generate ASMSNMP Passwords
      include_tasks: generate_asm_password.yml
      vars:
        oem_db_name:

    - name: Rotate ASMSNMP Passwords
      include_tasks: rotate_asm_passwords.yml
      vars:
        oem_db_name:

    - name: Rotate Oracle Password
      include_tasks: rotate_oracle_password.yml

  # Restart Monitoring regardless of success of password rotation
  always:
    - name: Re-Enable Monitoring
      block:
        # Re-Enable OEM Native Monitoring
        - name: Stop database monitoring blackout
          include_role:
            name: ../oem_blackout/oem-blackout
          vars:
            target: "{{ inventory_hostname }}"
            action: "stop"
            object_type: "all"
            blackout: "PASSWORD_ROTATION_{{ environment_name }}"

        # Re-Enable OEM Script-Based Monitoring
        # We supply the script path here to allow the script_exclusion.yml file
        # to find another script which it calls within the same directory.
        # Ideally this would be done using roles instead of supplying a script path,
        # but that would require significant changes to existing code.
        - name: Un-Exclude Target Hosts from Monitoring During Password Changes
          include_role:
            name: ../oem_blackout/oem-blackout
            tasks_from: script_exclusion.yml
          vars:
            action: "stop"
            blackout: "PASSWORD_ROTATION_{{ environment_name }}"
