- name: Set Application (Delius)
  set_fact:
    application: "{{ db_type + '-database' }}"
  when: not environment_name is search('eng.*')

- name: Get New Password for {{ db_username }}
  include_tasks: create_random_password.yml

# Check if application database user exists. There are cases where they may only exist in certain environments
- name: Check Application Database User {{ db_username }} Exists
  script: get_db_user.sh
  register: get_db_user
  changed_when: false
  environment:
    DB_USERNAME: "{{ db_username }}"
  vars:
    ansible_aws_ssm_timeout: 60

- name: Set db user exists flag
  set_fact:
    db_user_exists: "{{ '1' in get_db_user.stdout }}"

- block:

    - name: Set application secret name
      set_fact:
        secret_application_name: "{{ secret_name | replace('dba','application') }}"

    # There is a potential for this task to fail due to AWS throttling, so allow it to retry a few times if needed
    - name: Record New Database Password for {{ db_username }} in Secret Manager
      include_tasks: record_secret_password.yml
      vars:
        secret_name: "{{ secret_application_name }}"

    # We only need to change the password in the primary database
    - name: Set Password for {{ db_username }} in Database
      script: set_db_password.sh
      register: set_db_password
      environment:
        DB_USERNAME: "{{ db_username }}"
        SECRET_NAME: "{{ secret_application_name }}"
      vars:
        ansible_aws_ssm_timeout: 60

  when: db_user_exists
