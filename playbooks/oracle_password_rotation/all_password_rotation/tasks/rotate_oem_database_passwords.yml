# Do not specify database login credentials as will login as SYS on primary
- name: Set Profile for DBSNMP on {{ oem_db_name }}
  include_tasks: set_dbsnmp_profile.yml

# We require a special profile for SYS which prevents it getting locked out if an invalid password
# is used as we must always be able to connect to the SYS account.
# This profile allows for a high number of failures before locking - this provides time for the DBA
# to become aware of the situation before the account gets locked out.
- name: Set Profile for SYS on {{ oem_db_name }}
  include_tasks: set_sys_profile.yml

- name: Set Secret Manager Name
  set_fact:
    secret_name: "/oracle/database/{{ oem_db_name }}/passwords"

- name: Set Password SYS for {{ oem_db_name }}
  include_tasks: rotate_system_passwords.yml
  vars:
    db_username: "sys"

- name: Set Password for SYSTEM for {{ oem_db_name }}
  include_tasks: rotate_system_passwords.yml
  vars:
    db_username: "system"

- name: Set Passwords for DBSNMP for {{ oem_db_name }}
  include_tasks: rotate_system_passwords.yml
  vars:
    db_username: "dbsnmp"

# Unlock database accounts in case they have become locked whilst waiting for OEM target password updates.
# (This should not happen due to Gradual Database Password Rollover but it can happen if the passwords
#  are changed more than once per hour since any interim passwords cannot be used).
# We only unlock passwords which have recently become locked.
- name: Unlock Accounts for SYS, SYSTEM, DBSNMP
  include_tasks: unlock_system_passwords.yml
  vars:
    db_username: "{{ username }}"
  loop: ["sys", "system", "dbsnmp"]
  loop_control:
    loop_var: username
