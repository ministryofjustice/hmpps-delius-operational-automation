- name: Initialise Secrets Dictionary
  set_fact:
    secretsmanager_passwords_dict: {}

- name: Setup Temporary Secrets Dictionary
  set_fact:
    secret_password_dict:
      account:
        secret: "{{ secret_name }}"
  when: (not sync_monitoring_passwords | default(false) | bool) or ((sync_monitoring_passwords | default(false) | bool) and (target_environment_name is search('hmpps-oem')))

- name: Special Case To Setup Secrets Dictionary Syncing Monitoring Passwords From OEM For None OEM Target Environment
  when:
    - sync_monitoring_passwords | default(false) | bool
    - not target_environment_name is search('hmpps-oem')
  block:
    - name: Get EC2 Metadata Facts
      amazon.aws.ec2_metadata_facts:

    - name: Set Target Account Name For Secrets
      set_fact:
        target_account_name: "{{ target_environment_name.split('-')[:2] | join('-') + '-' + aws_environment }}"

    - name: Setup Secrets Dictionary Syncing Monitoring Passwords From OEM
      set_fact:
        secret_password_dict:
          account:
            account_name: "{{ target_account_name }}"
            assume_role_name: "EC2OracleEnterpriseManagementSecretsRole"
            secret: "{{ secret_name }}"

- name: Combine {{ db_username }} User To Secrets Dictionary
  set_fact:
    secret_password_dict: "{{ secret_password_dict |  combine({ 'account': { 'users': [{db_username: None}] }}, recursive=true) }}"

- name: Get Password From Secrets
  import_role:
    name: secretsmanager-passwords
  vars:
    secretsmanager_passwords: "{{ secret_password_dict }}"

- name: Set Variable {{ db_username }} Password
  set_fact:
    password: "{{ secretsmanager_passwords_dict['account'].passwords[db_username] }}"

- name: Set the Monitoring Credential for {{ monitor_item }}
  shell: |
    . ~/.bash_profile
    {{ emcli_login | default() }}
    {{ emcli }} sync 1>/dev/null 2>&1 || ( {{ emcli }} login -username=sysman -password=${SYSMAN_PASSWORD} -force && {{ emcli }} sync ) 1>/dev/null 2>&1
    {{ emcli }} modify_target -name="{{ monitor_item }}" -type="{{ monitor_type }}" -credentials="UserName:{{ db_username }};password:${PASSWORD};Role:{{ monitor_role }}" -on_agent
  environment:
    SYSMAN_PASSWORD: "{{ sysman_password }}"
    PASSWORD: "{{ password }}"
